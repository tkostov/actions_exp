
name: Run Tests on Branch
on:
  pull_request:
    branches: ['main']

jobs:
  build_source_branch:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi
      - uses: pre-commit/action@v2.0.3
        # with:
        #   token: ${{ secrets.GITHUB_TOKEN }}
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          # pytest
          echo "Tests done"


  build_pr_eventuall_merge:
    needs: build_source_branch
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi
      - uses: pre-commit/action@v2.0.3
        # with:
        #   token: ${{ secrets.GITHUB_TOKEN }}
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest


# jobs:
#   build:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     services:
#       db_service:
#         image: postgres
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_DB: postgres
#           POSTGRES_PASSWORD: postgres
#         # Set health checks to wait until postgres has started
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#         ports:
#           # Maps tcp port 5432 on service container to the host
#           - 5432:5432



#     steps:
#       - uses: actions/checkout@v2
#       - name: Install python version
#         uses: gabrielfalcao/pyenv-action@v7
#         with:
#           default: 3.8.6
#           command: pip install -U pip  # upgrade pip after installing python

#       - name: create environment
#         run: pyenv local 3.8.6 && python -mvenv .venv386

#       - name: Install dependencies
#         run: pip install -r requirements.txt --upgrade pip
#              pip install pylint
#       - name: Analysing the code with pylint
#         run: |
#           pylint `ls -R|grep .py$|xargs`

#       - name: setup pyenv
#         id: pyenv_installation
#         uses: "gabrielfalcao/pyenv-action@v7"

#       - name: debug pyenv
#         run: echo ${{ steps.pyenv_installation.outputs.pyenv_root }}
# view rawpostgres_pyenv_gh_action_config.yml hosted with ‚ù§ by GitHub
